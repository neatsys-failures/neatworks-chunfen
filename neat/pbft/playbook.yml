---
- name: Set fallback value for variables
  hosts: all
  gather_facts: False

  tasks:
  - name: Set fact
    ansible.builtin.set_fact:
      work_dir: /local/cowsay
      client_count: 1
      # blank for UDP & 1 worker thread
      flags:

- name: Build artifacts
  hosts: localhost
  connection: local
  gather_facts: False

  tasks:
  - name: Cargo build
    ansible.builtin.command: cargo build --release --bin neat-pbft

- name: Synchronize artifacts
  hosts: all
  gather_facts: False

  tasks:
  - name: Synchronize
    ansible.posix.synchronize:
      src: "{{ playbook_dir }}/../../target/release/neat-pbft"
      dest: "{{ work_dir }}/"

- name: Deploy barrier service
  hosts: service
  gather_facts: False

  tasks:
  - name: Run detached
    ansible.builtin.shell:
      tmux new-session -d -s neat-pbft-service
      "{{ work_dir }}/neat-pbft
        --barrier-count {{ (groups['replica'] | length) + (groups['client'] | length) }}
        || read _"

- name: Deploy replica
  hosts: replica
  gather_facts: False

  tasks:
  - name: Run detached
    ansible.builtin.shell:
      tmux new-session -d -s neat-pbft
      "{{ work_dir }}/neat-pbft
        --barrier-host {{ groups['service'][0] }}
        {{ flags }}
        --replica-id {{ groups['replica'].index(inventory_hostname) }}
        1> {{ work_dir }}/out.log
        || read _"

- name: Run clients
  hosts: client
  gather_facts: False

  tasks:
  - name: Run and collect results
    any_errors_fatal: True
    block:
    - name: Run
      ansible.builtin.shell:
        ./neat-pbft
          --barrier-host {{ groups['service'][0] }}
          {{ flags }}
          --client-index {{ (groups['client'].index(inventory_hostname) | int) * (client_count | int) }}
          --client-count {{ client_count }}
          --client-sec 10
          1> ./pbft-{{ inventory_hostname }}.txt
          2> ./err.log
      args:
        chdir: "{{ work_dir }}"
    - name: Synchronize
      ansible.posix.synchronize:
        mode: pull
        src: "{{ work_dir }}/pbft-{{ inventory_hostname }}.txt"
        dest: "{{ inventory_dir }}"
    rescue:
    - name: Report failure
      local_action:
        module: ansible.builtin.debug
        msg: "Client failed"
      run_once: True

- name: Shutdown replica
  hosts: replica
  gather_facts: False

  tasks:
  - name: Interrupt
    ansible.builtin.command: pkill -INT --full neat-pbft
    ignore_errors: True  # TCP/TLS replica will actively shutdown when all clients disconnected
